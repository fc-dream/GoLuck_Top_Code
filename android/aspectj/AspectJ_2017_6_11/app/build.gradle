apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "API_SERVER_URL", '"https://www.oschina.net/;http://192.168.1.74:9090/"')
    }

    // rename the apk with the version name
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent + "/${variant.buildType.name}","AspectJ-${variant.versionName}-${variant.buildType.name}.apk".toLowerCase())
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/README.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude '!META-INF/MANIFEST.MF'
        exclude 'META-INF/MANIFEST.MF'
    }

    /**
     * 这前用上面multiDexEnabled true时，
     * 突然在5.0以下的手机上跑不起来，
     * 改成下面这种写法就可以了。
     */
    dexOptions {
        jumboMode true
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            try {
                storeFile file("testkeystore.jks")//这里替换成你自己项目生成的keystore的存储路径
                storePassword "testkeystore"
                keyAlias "testkey"
                keyPassword "testkeystore"
                v2SigningEnabled true
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }


    buildTypes {
        release {
            buildConfigField("boolean", "isTest", "false")
            buildConfigField("String", "channel", "\"release\"")
            minifyEnabled true
            //是否清理无用资源
            shrinkResources true
            //是否启用zipAlign压缩
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField("boolean", "isTest", "true")
            buildConfigField("String", "channel", "\"debug\"")
            minifyEnabled false//true：启用混淆,false:不启用
            // 是否清理无用资源
            shrinkResources false
            //是否启用zipAlign压缩
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug1 {
            buildConfigField("boolean", "isTest", "true")
            buildConfigField("String", "channel", "\"debug1\"")
            minifyEnabled false//true：启用混淆,false:不启用
            // 是否清理无用资源
            shrinkResources false
            //是否启用zipAlign压缩
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug2 {
            buildConfigField("boolean", "isTest", "true")
            buildConfigField("String", "channel", "\"debug2\"")
            minifyEnabled false//true：启用混淆,false:不启用
            // 是否清理无用资源
            shrinkResources false
            //是否启用zipAlign压缩
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    defaultPublishConfig "release"
    publishNonDefault true
}
aspectjx {
    excludeJarFilter '.jar'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'org.aspectj:aspectjrt:1.8.9'
    debugCompile 'com.facebook.stetho:stetho:1.5.0'
}
